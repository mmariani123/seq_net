tamoxifen4 <- dba.count(tamoxifen4)
tamoxifen4 <- dba.contrast(tamoxifen4)
tamoxifen4 <- dba.analyze(tamoxifen4)
tamoxifen.DB4 <- dba.report(tamoxifen4)
tamoxifen5 <- dba(sampleSheet=sample5)
tamoxifen5 <- dba.count(tamoxifen5)
tamoxifen5 <- dba.contrast(tamoxifen5)
tamoxifen5 <- dba.analyze(tamoxifen5)
tamoxifen.DB5 <- dba.report(tamoxifen5)
tamoxifen6 <- dba(sampleSheet=sample6)
tamoxifen6 <- dba.count(tamoxifen6)
tamoxifen6 <- dba.contrast(tamoxifen6)
tamoxifen6 <- dba.analyze(tamoxifen6)
tamoxifen.DB6 <- dba.report(tamoxifen6)
names<-c(
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_Control_HFL_AntiCTCF_S31_L005_R1_001.fastq.gz.flagstat",
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_Control_HFL_Input_S30_L005_R1_001.fastq.gz.flagstat",
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_VZV_AntiCTCF_S33_L005_R1_001.fastq.gz.flagstat",
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_VZV_Input_S32_L005_R1_001.fastq.gz.flagstat",
"HFL_con_CTCF_set2_S2_L001_R1_001.fastq.gz.flagstat",
"HFL_con_CTCF_set3_S6_L001_R1_001.fastq.gz.flagstat",
"HFL_con_in_set2_S1_L001_R1_001.fastq.gz.flagstat",
"HFL_con_in_set3_S5_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_CTCF_set2_S4_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_CTCF_set3_S8_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_in_set2_S3_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_in_set3_S7_L001_R1_001.fastq.gz.flagstat",
)
names<-c(
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_Control_HFL_AntiCTCF_S31_L005_R1_001.fastq.gz.flagstat",
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_Control_HFL_Input_S30_L005_R1_001.fastq.gz.flagstat",
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_VZV_AntiCTCF_S33_L005_R1_001.fastq.gz.flagstat",
"Frietze_Cohrs_11497_180409_SNL128_0174_ACC3JAACXX_VZV_Input_S32_L005_R1_001.fastq.gz.flagstat",
"HFL_con_CTCF_set2_S2_L001_R1_001.fastq.gz.flagstat",
"HFL_con_CTCF_set3_S6_L001_R1_001.fastq.gz.flagstat",
"HFL_con_in_set2_S1_L001_R1_001.fastq.gz.flagstat",
"HFL_con_in_set3_S5_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_CTCF_set2_S4_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_CTCF_set3_S8_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_in_set2_S3_L001_R1_001.fastq.gz.flagstat",
"HFL_VZV_in_set3_S7_L001_R1_001.fastq.gz.flagstat"
)
rep(names,times=12)
cat(rep(names,times=12),"\n")
rep(names,times=12
rep(names,times=12)
cat(rep(names,times=12),"\r\n")
rep(names,times=12)
?rep
rep(names,each=12)
rep(names,each=13)
flagstat_hg38<-read.table(file=file.choose(),sep=",",header = TRUE)
View(flagstat_hg38)
casted<-dcast()
library(data.table)
casted<-dcast()
casted<-dcast(data=flagstat_hg38,)
colnames(flagstat_hg38)<-c("sample","data")
casted<-dcast(data=flagstat_hg38,data ~ sample,
?dcast
casted<-dcast(data=flagstat_hg38,data ~ sample,fun=print(x))
casted<-dcast(data=flagstat_hg38,data ~ sample,fun.aggregate=print(x))
casted<-dcast(data=flagstat_hg38,data ~ sample,fun.aggregate=print
casted<-dcast(data=flagstat_hg38,data ~ sample,fun.aggregate=print )
casted<-dcast(data=flagstat_hg38,data ~ sample,print)
reshape(mydf, idvar='sample', direction='wide')
reshape(flagstat_hg38, idvar='sample', direction='wide')
?reshape()
reshape(flagstat_hg38, v.names="sample", direction='wide')
maxs <- aggregate(data ~ sample, data = flagstat_hg38, FUN = print)
View(maxs)
maxs <- aggregate(sample ~ data, data = flagstat_hg38, FUN = print)
maxs <- aggregate(data ~ sample, data = flagstat_hg38, FUN = print)
casted<-dcast(data=flagstat_hg38,sample ~ data,print)
data_wide <- dcast(flagstat_hg38, subject + data ~ sample, value.var="measurement")
data_wide <- dcast(flagstat_hg38, subject + data ~ sample, value.var="data")
data_wide <- dcast(flagstat_hg38, data ~ sample, value.var="data")
View(data_wide)
data_wide <- dcast(flagstat_hg38, data ~ sample, value.var=print("data"))
data_wide <- dcast(flagstat_hg38, data ~ sample, value.var=print())
data_wide <- dcast(flagstat_hg38, data ~ sample, value.var="sample")
data_wide <- cast(flagstat_hg38, data ~ sample)
install.packages("reshape")
library("reshape")
data_wide <- cast(flagstat_hg38, data ~ sample)
View(data_wide)
View(flagstat_hg38)
data_wide <- cast(flagstat_hg38, data ~ sample)
data_wide <- cast(flagstat_hg38, data ~ sample)
data_wide <- cast(flagstat_hg38, data ~ sample)
data_wide <- cast(flagstat_hg38, data ~ sample)
aggregated<-aggregate(flagstat_hg38, by=list("sample"), FUN=print)
aggregated<-aggregate(flagstat_hg38, by=list("sample"), FUN=print)
splitted<-split(flagstat_hg38,1:13)
View(maxs)
View(splitted)
splitted<-split(flagstat_hg38$data,1:13)
View(splitted)
splitted<-split(flagstat_hg38$data,1:13)
View(splitted)
as.data.frame(splitted<-split(flagstat_hg38,1:13))
View(splitted)
splitted<-as.data.frame(split(flagstat_hg38,1:13))
View(splitted)
splitted<-as.data.frame(split(flagstat_hg38$data,1:13))
?split()
?split
?split
library("tidyr")
separated<-separate(flagstat_hg38,"data")
pivot()
library(PIVOT)
source("https://bioconductor.org/biocLite.R")
biocLite("PIVOT")
biocLite("pivot")
pivot()
PIVOT()
install.packages("PIVOT")
install.packages("pivot")
pivot9
pivot()
install.packages("devtools")
# First run this line alone then paste rest.
install.packages("devtools")
library("devtools")
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
library(PIVOT)
pivot()
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
library(shiny); runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
?renderText
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
?textOutput
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
?HTML
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
?div
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
h?
?h
?header
?div
?hr
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
?as.string
?lapply
shiny::runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
?textAreaInput
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
?actionButton
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
readFASTA
?readFASTA
?readFASTA
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
write.table
?write.table
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
fasta_seq <- readFASTA(file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\test.fasta")
#fasta_seq<-""
print("in")
x1<-t(sapply(fasta_seq,kmer)) #- Basic kmer and Reverse compliment kmer
print("1 done")
#x2<-t(sapply(fasta_seq,make_idkmer_vec)) #- Increment of diversity (ID)
#Autocorrelation
x3<-t(sapply(fasta_seq,extrDAC)) #- Dinucleotide-based auto covariance
print("3 done")
x4<-t(sapply(fasta_seq,extrDCC)) #- Dinucleotide-based cross covariance
print("4 done")
x5<-t(sapply(fasta_seq,extrDACC)) #- Dinucleotide-based auto-cross covariance
print("5 done")
x6<-t(sapply(fasta_seq,extrTAC)) #- Trinucleotide-based auto covariance
print("6 done")
x7<-t(sapply(fasta_seq,extrTCC)) #- Trinucleotide-based cross covariance
print("7 done")
x8<-t(sapply(fasta_seq,extrDACC)) #- Trinucleotide-based auto-cross covariance
print("8 done")
#Pseudo nucleotide composition
x9<-t(sapply(fasta_seq,extrPseDNC)) #- Pseudo dinucleotide composition
print("9 done")
x10<-t(sapply(fasta_seq,extrPseKNC)) #- Pseudo k-tupler nucleotide composition
print("10 done")
x12<-t(sapply(fasta_seq,twoSeqSim))
print("12 done")
#x13<-t(sapply(fasta_seq,twoGOSim))
final_frame<-cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10,
x12
)
final_frame<-cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10
)
final_frame<-cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10
)
my_onp$category=rep("",times=nrow(my_onp))
test_data<-my_onp
#There appears to be at least 1 duplicate column, so let's remove the duplicates:
test_data <- test_data[, !duplicated(colnames(test_data))]
h2oServer <- h2o.init(ip="localhost", port=54321, max_mem_size="16g", nthreads=-1)
test_hex <- as.h2o(test_data)
test_hex[,116] <- as.factor(test_hex[,116])
#model_path<-"/slipstream/home/mmariani/hhv6_ann/output/DeepLearning_model_R_1535305455367_4"
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
test_frame<-cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10
)
test_frame$category=rep("",times=nrow(test_frame))
#There appears to be at least 1 duplicate column, so let's remove the duplicates:
test_frame <- test_frame[, !duplicated(colnames(test_frame))]
h2oServer <- h2o.init(ip="localhost", port=54321, max_mem_size="16g", nthreads=-1)
test_hex <- as.h2o(test_frame)
test_hex[,116] <- as.factor(test_hex[,116])
#model_path<-"/slipstream/home/mmariani/hhv6_ann/output/DeepLearning_model_R_1535305455367_4"
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
test_frame<-unlist(cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10
))
View(test_frame)
test_frame<-data.frame(unlist(cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10
)))
View(test_frame)
test_frame$category=rep("",times=nrow(test_frame))
#There appears to be at least 1 duplicate column, so let's remove the duplicates:
test_frame <- test_frame[, !duplicated(colnames(test_frame))]
h2oServer <- h2o.init(ip="localhost", port=54321, max_mem_size="16g", nthreads=-1)
test_hex <- as.h2o(test_frame)
test_hex[,116] <- as.factor(test_hex[,116])
#model_path<-"/slipstream/home/mmariani/hhv6_ann/output/DeepLearning_model_R_1535305455367_4"
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
model_path<-"www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
model_path<-"www/data/DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
#There appears to be at least 1 duplicate column, so let's remove the duplicates:
test_frame <- test_frame[, !duplicated(colnames(test_frame))]
h2oServer <- h2o.init(ip="localhost", port=54321, max_mem_size="16g", nthreads=-1)
test_hex <- as.h2o(test_frame)
test_hex[,116] <- as.factor(test_hex[,116])
#model_path<-"/slipstream/home/mmariani/hhv6_ann/output/DeepLearning_model_R_1535305455367_4"
model_path<-"www/data/DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wright/2/R")
install.packages("h2o", type = "source", repos = "http://h2o-release.s3.amazonaws.com/h2o/rel-wright/2/R")
install.packages("h2o", type = "source", repos = "http://h2o-release.s3.amazonaws.com/h2o/rel-wright/2/R")
install.packages("h2o", type = "source", repos = "http://h2o-release.s3.amazonaws.com/h2o/rel-wright/2/R")
shiny::runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
shiny::runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
test_frame<-data.frame(unlist(cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10
)))
test_frame$category=rep("",times=nrow(test_frame))
#There appears to be at least 1 duplicate column, so let's remove the duplicates:
test_frame <- test_frame[, !duplicated(colnames(test_frame))]
h2oServer <- h2o.init(ip="localhost", port=54321, max_mem_size="16g", nthreads=-1)
test_hex <- as.h2o(test_frame)
test_hex[,116] <- as.factor(test_hex[,116])
#model_path<-"/slipstream/home/mmariani/hhv6_ann/output/DeepLearning_model_R_1535305455367_4"
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
test_frame <- test_frame[, !duplicated(colnames(test_frame))]
#There appears to be at least 1 duplicate column, so let's remove the duplicates:
test_frame <- test_frame[, !duplicated(colnames(test_frame))]
h2oServer <- h2o.init(ip="localhost", port=54321, max_mem_size="16g", nthreads=-1)
test_hex <- as.h2o(test_frame)
test_hex[,133] <- as.factor(test_hex[,133])
#model_path<-"/slipstream/home/mmariani/hhv6_ann/output/DeepLearning_model_R_1535305455367_4"
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
test_frame<-data.frame(unlist(cbind(
x1,
x3,
x4,
x5,
x6,
x7,
x8,
x9,
x10
)))
test_frame$category=rep("human",times=nrow(test_frame))
#There appears to be at least 1 duplicate column, so let's remove the duplicates:
test_frame <- test_frame[, !duplicated(colnames(test_frame))]
h2oServer <- h2o.init(ip="localhost", port=54321, max_mem_size="16g", nthreads=-1)
test_hex <- as.h2o(test_frame)
test_hex[,133] <- as.factor(test_hex[,133])
#model_path<-"/slipstream/home/mmariani/hhv6_ann/output/DeepLearning_model_R_1535305455367_4"
model_path<-"C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\DeepLearning_model_R_1535305455367_4"
saved_model <- h2o.loadModel(model_path)
predictions <- h2o.predict(saved_model, test_hex)
write.csv(as.data.frame(predictions),
file="C:\\Users\\Mike\\Desktop\\shiny_apps\\seqnet\\www\\data\\shiny_test_predictions.csv",
row.names=FALSE)
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
as.data.frame(predictions)
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
preds<-as.data.frame(predictions)
View(preds)
preds<-unlist(as.data.frame(predictions))
preds
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
preds
preds<-as.matrix(predictions)
View(preds)
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
?verbatimTextOutput
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
as.data.frame(predictions)
pred_frame$read<-rownames(test_frame)
pred_frame<-as.data.frame(predictions)
pred_frame$read<-rownames(test_frame)
View(pred_frame)
pred_frame<-pred_frame[,c(4,2,3,1)]
View(pred_frame)
colnames(pred_frame)<-c("read","p(human)", "p(virus)", "predict")
View(pred_frame)
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
runApp('C:/Users/Mike/Desktop/shiny_apps/4c_primer/4c_prime_app.R')
runApp('C:/Users/Mike/Desktop/shiny_apps/seqnet')
